ARQUITETURA DA APLICAÇÃO

#BACK-END
  -Regra de negócio
  -Conexão banco de dados
  -Envio de Email
  -Comunicação com Webservice(serviçoes que podem pretar algum tipo de informação para a nossa aplicação)
  -Autenticação do usuário
  -Criptografia e segurança

  Dentro da semana estaremos construindo uma API RestFull, que no caso é quando criamos uma aplicação que
  nao possui front-ent, o RestFull são regras que a API irá seguir.

  Sendo assim, para a nossa aplicação realizar a comunicação de forma padronizada com os serviços como o Front-end Web,
  o Front-end Mobile e qualquer outro serviço externo, estaremos utilizando para a traferencia de dados utilizaremos 
  o 'JSON'. 

  #1
    -Criar pasta backend, e realizar o 'yarn init -y'; 
    -Em seguida instalar o 'express'
    -Definir a rota home
    -Instalar o nodemon, comand > 'yarn add -D nodemon'
    
    -Instalar o insomnia para conseguirmos testar as rotas que formos implementando 'insomnia.rest'
    -Após a instalação do insomnia, definiremos a nossa primeira request, no caso estamos criando
      uma rota para testarmos  
    
    -Tipos de parametros dentro do express:
      -Temos 3 tipos de parametros são eles:
        -Query Params: 
          *São usados na maioria das vezes no método GET, pois o metodo get não aceita corpo. 
          *Todos os Qeury Params ficam visiveis na url por exemplo "http://localhost:3333/?search=Diego"
          *Utilizamos/acessamos ele com a seguinte sintax: 'req.query' ; 
          *São usados como "Filtros, Ordenação, Paginação e etc", são esses tipos que não tem tanto haver com criação

        -Route Params:
          * São usados exclusivamente nos métodos PUT e DELETE;
          * Exemplo de uma Route Params "http://localhost:3333/users/1", eles não posssuem nome;
          * Para acessarmos esse params utilizamos o 'res.params';
          * São usados para identificar um recurso na alteração ou remoção 

        -Body(É corpo da requisição):
          * São usado para criação ou alteração de um registro
          * Acessamos esse params utilizamos o 'res.body'
          * 
      OBS: Para utilizamos o JSON no corpo de nossas requisições, será necessário dizer para o express que iremos usar,
      para dizermos para ele basta fazer o seguinte:
        * app.use(express.json)

     -MONGODB
        * Um banco não relacional 
        * Cadastre e crie o Cluster
        * Um cluster é um servidor, e dentro dele podemos ter varias bases de dados
        * Para usarmos em nossa aplicação iremos primeiramente instalar o 'mongoose', comand > 'yarn add mongoose'

    Após passar os aquivos para a pasta src e adicionar o as rotas,
    criar nossa primeira models..

    Instale o axios para começar as requisições de verdade e importe ele la dentro da 'routes.js'

  - Geolocalização
      para incialmente conseguirmo cadastrar a localização do dev, estaremos criando dentro de models
      uma pasta chamada utils, dentro dela iremos guarda a configuração da Geolocalização por ela ser 
      grande e também conseguirmos usar em outros lugares dentro da aplicação.

      Obs: Essa configuração que ele nos ensina a fazer consta dentro da documentação do mongodb.

      Agora basta realizar o teste com o insomnia adicionando a longitude e latitude..
      Como e onde pordemos/iremos buscar essa longitude e latitude? Se acessarmos o googleMaps,
      e aguardar alguns segundos que la em cima na url irá aparecer alguns numeros, o primeiro numero
      significa a Latitude e o segundo numero a Longitude.
      Exemplo
      @-15.8337327,-47.9119285,15z
        Latitude      Longitude


      # Nesse momento a nossa requisição no insomnia está da seguinte forma: 
      JSON
      {
        "github_username": "gabrielbriks",
        "techs": "ReactJS, NodeJS, JS",
        "latitude": "-15.8337327",
        "longitude": "-47.9119285"
      }


      